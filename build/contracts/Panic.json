{
  "contractName": "Panic",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]}},\"version\":1}",
  "bytecode": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059237cff00bc9e5ee04f8035eec800995cdb436bc556b9e20c773e48dceae8f664736f6c63430008150033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059237cff00bc9e5ee04f8035eec800995cdb436bc556b9e20c773e48dceae8f664736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "682:1346:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "682:1346:8:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Helper library for emitting standardized panic codes.\r\n *\r\n * ```solidity\r\n * contract Example {\r\n *      using Panic for uint256;\r\n *\r\n *      // Use any of the declared internal constants\r\n *      function foo() { Panic.GENERIC.panic(); }\r\n *\r\n *      // Alternatively\r\n *      function foo() { Panic.panic(Panic.GENERIC); }\r\n * }\r\n * ```\r\n *\r\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\r\n *\r\n * _Available since v5.1._\r\n */\r\n// slither-disable-next-line unused-state\r\nlibrary Panic {\r\n    /// @dev generic / unspecified error\r\n    uint256 internal constant GENERIC = 0x00;\r\n    /// @dev used by the assert() builtin\r\n    uint256 internal constant ASSERT = 0x01;\r\n    /// @dev arithmetic underflow or overflow\r\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\r\n    /// @dev division or modulo by zero\r\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\r\n    /// @dev enum conversion error\r\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\r\n    /// @dev invalid encoding in storage\r\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\r\n    /// @dev empty array pop\r\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\r\n    /// @dev array out of bounds access\r\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\r\n    /// @dev resource error (too large allocation or too large array)\r\n    uint256 internal constant RESOURCE_ERROR = 0x41;\r\n    /// @dev calling invalid internal function\r\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\r\n\r\n    /// @dev Reverts with a panic code. Recommended to use with\r\n    /// the internal constants with predefined codes.\r\n    function panic(uint256 code) internal pure {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, 0x4e487b71)\r\n            mstore(0x20, code)\r\n            revert(0x1c, 0x24)\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "@openzeppelin\\contracts\\utils\\Panic.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
    "exportedSymbols": {
      "Panic": [
        1442
      ]
    },
    "id": 1443,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1392,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:24:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Panic",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1393,
          "nodeType": "StructuredDocumentation",
          "src": "130:507:8",
          "text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
        },
        "fullyImplemented": true,
        "id": 1442,
        "linearizedBaseContracts": [
          1442
        ],
        "name": "Panic",
        "nameLocation": "690:5:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 1394,
              "nodeType": "StructuredDocumentation",
              "src": "703:36:8",
              "text": "@dev generic / unspecified error"
            },
            "id": 1397,
            "mutability": "constant",
            "name": "GENERIC",
            "nameLocation": "771:7:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "745:40:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1395,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "745:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 1396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "781:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1398,
              "nodeType": "StructuredDocumentation",
              "src": "792:37:8",
              "text": "@dev used by the assert() builtin"
            },
            "id": 1401,
            "mutability": "constant",
            "name": "ASSERT",
            "nameLocation": "861:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "835:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1399,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "835:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783031",
              "id": 1400,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "870:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x01"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1402,
              "nodeType": "StructuredDocumentation",
              "src": "881:41:8",
              "text": "@dev arithmetic underflow or overflow"
            },
            "id": 1405,
            "mutability": "constant",
            "name": "UNDER_OVERFLOW",
            "nameLocation": "954:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "928:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1403,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "928:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783131",
              "id": 1404,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "971:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_17_by_1",
                "typeString": "int_const 17"
              },
              "value": "0x11"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1406,
              "nodeType": "StructuredDocumentation",
              "src": "982:35:8",
              "text": "@dev division or modulo by zero"
            },
            "id": 1409,
            "mutability": "constant",
            "name": "DIVISION_BY_ZERO",
            "nameLocation": "1049:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1023:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1407,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1023:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783132",
              "id": 1408,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1068:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "0x12"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1410,
              "nodeType": "StructuredDocumentation",
              "src": "1079:30:8",
              "text": "@dev enum conversion error"
            },
            "id": 1413,
            "mutability": "constant",
            "name": "ENUM_CONVERSION_ERROR",
            "nameLocation": "1141:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1115:54:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1411,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1115:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783231",
              "id": 1412,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1165:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33_by_1",
                "typeString": "int_const 33"
              },
              "value": "0x21"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1414,
              "nodeType": "StructuredDocumentation",
              "src": "1176:36:8",
              "text": "@dev invalid encoding in storage"
            },
            "id": 1417,
            "mutability": "constant",
            "name": "STORAGE_ENCODING_ERROR",
            "nameLocation": "1244:22:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1218:55:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1415,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1218:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783232",
              "id": 1416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1269:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_34_by_1",
                "typeString": "int_const 34"
              },
              "value": "0x22"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1418,
              "nodeType": "StructuredDocumentation",
              "src": "1280:24:8",
              "text": "@dev empty array pop"
            },
            "id": 1421,
            "mutability": "constant",
            "name": "EMPTY_ARRAY_POP",
            "nameLocation": "1336:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1310:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1419,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1310:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783331",
              "id": 1420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1354:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49_by_1",
                "typeString": "int_const 49"
              },
              "value": "0x31"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1422,
              "nodeType": "StructuredDocumentation",
              "src": "1365:35:8",
              "text": "@dev array out of bounds access"
            },
            "id": 1425,
            "mutability": "constant",
            "name": "ARRAY_OUT_OF_BOUNDS",
            "nameLocation": "1432:19:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1406:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1423,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1406:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783332",
              "id": 1424,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1454:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "0x32"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1426,
              "nodeType": "StructuredDocumentation",
              "src": "1465:65:8",
              "text": "@dev resource error (too large allocation or too large array)"
            },
            "id": 1429,
            "mutability": "constant",
            "name": "RESOURCE_ERROR",
            "nameLocation": "1562:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1536:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1427,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1536:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783431",
              "id": 1428,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1579:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65_by_1",
                "typeString": "int_const 65"
              },
              "value": "0x41"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1430,
              "nodeType": "StructuredDocumentation",
              "src": "1590:42:8",
              "text": "@dev calling invalid internal function"
            },
            "id": 1433,
            "mutability": "constant",
            "name": "INVALID_INTERNAL_FUNCTION",
            "nameLocation": "1664:25:8",
            "nodeType": "VariableDeclaration",
            "scope": 1442,
            "src": "1638:58:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1431,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1638:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783531",
              "id": 1432,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1692:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_81_by_1",
                "typeString": "int_const 81"
              },
              "value": "0x51"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "1868:157:8",
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "1904:114:8",
                    "nodeType": "YulBlock",
                    "src": "1904:114:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1926:4:8",
                              "nodeType": "YulLiteral",
                              "src": "1926:4:8",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1932:10:8",
                              "nodeType": "YulLiteral",
                              "src": "1932:10:8",
                              "type": "",
                              "value": "0x4e487b71"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "1919:6:8",
                            "nodeType": "YulIdentifier",
                            "src": "1919:6:8"
                          },
                          "nativeSrc": "1919:24:8",
                          "nodeType": "YulFunctionCall",
                          "src": "1919:24:8"
                        },
                        "nativeSrc": "1919:24:8",
                        "nodeType": "YulExpressionStatement",
                        "src": "1919:24:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1964:4:8",
                              "nodeType": "YulLiteral",
                              "src": "1964:4:8",
                              "type": "",
                              "value": "0x20"
                            },
                            {
                              "name": "code",
                              "nativeSrc": "1970:4:8",
                              "nodeType": "YulIdentifier",
                              "src": "1970:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "1957:6:8",
                            "nodeType": "YulIdentifier",
                            "src": "1957:6:8"
                          },
                          "nativeSrc": "1957:18:8",
                          "nodeType": "YulFunctionCall",
                          "src": "1957:18:8"
                        },
                        "nativeSrc": "1957:18:8",
                        "nodeType": "YulExpressionStatement",
                        "src": "1957:18:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1996:4:8",
                              "nodeType": "YulLiteral",
                              "src": "1996:4:8",
                              "type": "",
                              "value": "0x1c"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2002:4:8",
                              "nodeType": "YulLiteral",
                              "src": "2002:4:8",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1989:6:8",
                            "nodeType": "YulIdentifier",
                            "src": "1989:6:8"
                          },
                          "nativeSrc": "1989:18:8",
                          "nodeType": "YulFunctionCall",
                          "src": "1989:18:8"
                        },
                        "nativeSrc": "1989:18:8",
                        "nodeType": "YulExpressionStatement",
                        "src": "1989:18:8"
                      }
                    ]
                  },
                  "evmVersion": "shanghai",
                  "externalReferences": [
                    {
                      "declaration": 1436,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1970:4:8",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 1439,
                  "nodeType": "InlineAssembly",
                  "src": "1879:139:8"
                }
              ]
            },
            "documentation": {
              "id": 1434,
              "nodeType": "StructuredDocumentation",
              "src": "1705:114:8",
              "text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
            },
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "panic",
            "nameLocation": "1834:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "1848:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "1840:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:14:8"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:8"
            },
            "scope": 1442,
            "src": "1825:200:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1443,
        "src": "682:1346:8",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "102:1928:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-12-14T16:04:40.780Z",
  "devdoc": {
    "details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "ARRAY_OUT_OF_BOUNDS": {
        "details": "array out of bounds access"
      },
      "ASSERT": {
        "details": "used by the assert() builtin"
      },
      "DIVISION_BY_ZERO": {
        "details": "division or modulo by zero"
      },
      "EMPTY_ARRAY_POP": {
        "details": "empty array pop"
      },
      "ENUM_CONVERSION_ERROR": {
        "details": "enum conversion error"
      },
      "GENERIC": {
        "details": "generic / unspecified error"
      },
      "INVALID_INTERNAL_FUNCTION": {
        "details": "calling invalid internal function"
      },
      "RESOURCE_ERROR": {
        "details": "resource error (too large allocation or too large array)"
      },
      "STORAGE_ENCODING_ERROR": {
        "details": "invalid encoding in storage"
      },
      "UNDER_OVERFLOW": {
        "details": "arithmetic underflow or overflow"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}